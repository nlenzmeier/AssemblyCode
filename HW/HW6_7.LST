Turbo Assembler	 Version 4.1	    04/07/16 15:50:55	    Page 1
hw6_7.ASM



      1	0000			     .MODEL MEDIUM
      2
      3	0000			     .STACK 100H
      4
      5				     PUBLIC MYARRAY, COUNT, RESULT
      6
      7	0000			     .DATA
      8	0000  FFD3 03E8	FFDE 05DC +	  MYARRAY DW -45, 1000,	-34, 1500, 20, -60
      9	      0014 FFC4
     10	      =0006			  COUNT	  EQU 6				       ;SIX ELEMENTS IN	THE ARRAY
     11	000C  0000			  RESULT  DW 0
     12
     13	000E			     .CODE
     14				     .startup
1    15	0000			     @Startup:
1    16	0000  BA 0000s			     MOV     DX,@data
1    17	0003  8E DA			     MOV     DS,DX
1    18	0005  8C D3			     MOV     BX,SS
1    19	0007  2B DA			     SUB     BX,DX
1    20	0009  D1 E3 D1 E3 D1 E3	D1+	     SHL     BX,4
     21	      E3
1    22	0011  FA			     CLI
1    23	0012  8E D2			     MOV     SS,DX
1    24	0014  03 E3			     ADD     SP,BX
1    25	0016  FB			     STI
     26	0017			     MAIN PROC FAR
     27	0017  B8 0000s			  MOV AX, @DATA
     28	001A  8E D8			  MOV DS, AX
     29	001C  B9 0006			  MOV CX, COUNT
     30	001F  BE 0000r			  LEA SI, MYARRAY
     31	0022  E8 000C			  CALL FINDMIN
     32	0025  89 1E 000Cr		  MOV result, bx
     33
     34	0029  B4 4C			  MOV AH, 4CH				  ;exit	to dos
     35	002B  CD 21			  INT 21H
     36					  .EXIT
1    37	002D  B4 4C			     MOV     AH,4Ch
1    38	002F  CD 21			     INT     21h
     39	0031			     MAIN ENDP
     40
     41				     ;PUBLIC FINDMIN
     42	0031			     FINDMIN PROC NEAR
     43	0031  8B 04			   mov ax, [si]				  ;PULL	NEXT ELEMENT OUT OF ARRAY
     44	0033  8B D8			   mov bx, ax				  ;loading BX with the first array element
     45	0035  83 C6 02			   add si, 2				  ;Advance SI to the next array	element
     46
     47	0038			     loop1:
     48	0038  8B 04			   mov ax, [si]				  ;moves new si	into ax	before changing	si again
     49	003A  83 C6 02			   add si, 2				  ;Advance SI to the next array	element
     50	003D  3B C3			   cmp ax, bx				  ;compares array elements
     51	003F  7F 02			   jg  AGAIN				  ;If new values smaller than current value, go	to  +
     52				     replace it
     53										  ;new value is	larger so skip to loop end to go    +
     54				     around again
     55	0041  8B D8			   mov bx, ax				 ;moves	second element into first element
     56										  ;therefore making it the "new	min"
     57
Turbo Assembler	 Version 4.1	    04/07/16 15:50:55	    Page 2
hw6_7.ASM



     58	0043			     AGAIN:
     59	0043  E2 F3			   loop	loop1				  ;run program again
     60	0045  C3			   ret
     61
     62	0046			     FINDMIN ENDP
     63				     END
Turbo Assembler	 Version 4.1	    04/07/16 15:50:55	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/07/16"
??FILENAME			  Text	 "hw6_7	  "
??TIME				  Text	 "15:50:55"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 HW6_7_TEXT
@CODESIZE			  Text	 1
@CPU				  Text	 0101H
@CURSEG				  Text	 HW6_7_TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 HW6_7
@INTERFACE			  Text	 000H
@MODEL				  Text	 4
@STACK				  Text	 DGROUP
@STARTUP			  Near	 HW6_7_TEXT:0000
@WORDSIZE			  Text	 2
AGAIN				  Near	 HW6_7_TEXT:0043
COUNT				  Number 0006
FINDMIN				  Near	 HW6_7_TEXT:0031
LOOP1				  Near	 HW6_7_TEXT:0038
MAIN				  Far	 HW6_7_TEXT:0017
MYARRAY				  Word	 DGROUP:0000
RESULT				  Word	 DGROUP:000C

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0100 Para	  Stack	  STACK
  _DATA				  16  000E Word	  Public  DATA
HW6_7_TEXT			  16  0046 Word	  Public  CODE
